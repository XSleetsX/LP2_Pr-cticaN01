#include <iostream>
using namespace std;

class Alumno {
public:
    string nombre;
    int edad;
    double promedio;
    Alumno(string nombre = "", int edad = 0, double promedio = 0.0) 
        : nombre(nombre), edad(edad), promedio(promedio) {}
    friend ostream& operator<<(ostream& os, const Alumno& alumno) {
        os << "Nombre: " << alumno.nombre << ", Edad: " << alumno.edad << ", Promedio: " << alumno.promedio;
        return os;
    }
};

class Grupo {
public:
    Alumno alumnos[100];
    int cantidad;
    int numAlumnos;
    Grupo(int cantidad) : cantidad(cantidad), numAlumnos(0) {}
    friend ostream& operator<<(ostream& os, const Grupo& grupo) {
        for (int i = 0; i < grupo.numAlumnos; ++i) {
            os << grupo.alumnos[i] << endl;
        }
        return os;
    }
    void agregarAlumno(string nombre, int edad, double promedio) {
        if (numAlumnos < cantidad) {
            alumnos[numAlumnos++] = Alumno(nombre, edad, promedio);
        } else {
            cout << "No se pueden agregar mÃ¡s alumnos." << endl;
        }
    }
    void ordenarPorPromedio() {
        for (int i = 0; i < numAlumnos - 1; ++i) {
            for (int j = 0; j < numAlumnos - i - 1; ++j) {
                if (alumnos[j].promedio < alumnos[j + 1].promedio) {
                    swap(alumnos[j], alumnos[j + 1]);
                }
            }
        }
    }
    double promedioGrupo() const {
        if (numAlumnos > 0) {
            double total = 0.0;
            for (int i = 0; i < numAlumnos; ++i) {
                total += alumnos[i].promedio;
            }
            return total / numAlumnos;
        } else {
            return 0.0;
        }
    }
    const Alumno* mejorPromedio() const {
        if (numAlumnos > 0) {
            const Alumno* maxAlumno = &alumnos[0];
            for (int i = 1; i < numAlumnos; ++i) {
                if (alumnos[i].promedio > maxAlumno->promedio) {
                    maxAlumno = &alumnos[i];
                }
            }
            return maxAlumno;
        } else {
            return nullptr;
        }
    }
};

int main() {
    Grupo grupo(5);
    grupo.agregarAlumno("Luis", 20, 18.5);
    grupo.agregarAlumno("Eddy", 18, 17.8);
    grupo.agregarAlumno("Santiago", 16, 15.4);
    grupo.agregarAlumno("Diego", 17, 16.7);
    grupo.agregarAlumno("Hector", 15, 13.8);

    cout << "Lista de Alumnos:" << endl;
    cout << grupo << endl;

    double promedioGrupo = grupo.promedioGrupo();
    cout << "\nPromedio de lospromedios del grupo: " << promedioGrupo << endl;

    const Alumno* mejorPromedioAlumno = grupo.mejorPromedio();
    if (mejorPromedioAlumno) {
        cout << "\nAlumno con mejor promedio:" << endl;
        cout << *mejorPromedioAlumno << endl;
    } else {
        cout << "\nNo hay alumnos en el grupo." << endl;
    }
    return 0;
}





// SIN USAR SWAP PARTE DE CODIGO:
void ordenarPorPromedio() {
    for (int i = 0; i < numAlumnos - 1; ++i) {
        for (int j = 0; j < numAlumnos - i - 1; ++j) {
            if (alumnos[j].promedio < alumnos[j + 1].promedio) {
                // Guardamos el alumno actual en una variable temporal
                Alumno temp = alumnos[j];
                // Movemos el alumno siguiente al lugar del actual
                alumnos[j] = alumnos[j + 1];
                // Movemos el alumno guardado en la variable temporal al lugar del siguiente
                alumnos[j + 1] = temp;
            }
        }
    }
}
